
ALTER SESSION SET NLS_DATE_FORMAT = 'DD-MON-YYYY' NLS_DATE_LANGUAGE='english';


CREATE SEQUENCE PRIMARY_STUDENTS_KEY
  INCREMENT BY 1
  START WITH 1
  MINVALUE 1
  MAXVALUE 999999
  CYCLE;

CREATE TABLE SCHOOL (
	ID NUMBER(2) NOT NULL, -- only a few schools -- PRIMARY KEY,
	SCHOOL_NAME VARCHAR2(80) NOT NULL,
	FOUNDING_DATE DATE NOT NULL
);

CREATE TABLE MODULE (
	ID NUMBER(5) NOT NULL, -- PRIMARY KEY,
	MODULE_NAME VARCHAR2(80) NOT NULL
);

CREATE TABLE TUTOR  (
  ID NUMBER(10) NOT NULL, -- PRIMARY KEY,
  TITLE VARCHAR2(30), -- CHECK IN ,
	FIRST_NAME VARCHAR2(30) NOT NULL,
	LAST_NAME VARCHAR2(30) NOT NULL,
	ADDRESS VARCHAR2(100) NOT NULL,
	CITY  VARCHAR2(50) DEFAULT 'Thessaloniki' NOT NULL,
	POSTCODE CHAR(5) NOT NULL,
	CONTACT_NUMBER VARCHAR2(30),
	EMAIL VARCHAR2(100) NOT NULL,
	BIRTHDAY DATE NOT NULL,
	OFFICE VARCHAR2(20)
);

CREATE TABLE BOOK (
	ISBN VARCHAR2(17) NOT NULL, -- PRIMARY KEY,
	TITLE VARCHAR2(100) NOT NULL,
	AUTHOR VARCHAR2(100),
	PUB_YEAR DATE
);

CREATE TABLE COURSE (
	ID NUMBER(10) NOT NULL, -- PRIMARY KEY,
	COURSE_NAME VARCHAR2(100) NOT NULL,
	PRESIDENT VARCHAR2(100) NOT NULL,
	FOUNDING_DATE DATE NOT NULL,
	SCHOOL_ID NUMBER(5) NOT NULL
);

CREATE TABLE COPY (
	ID VARCHAR2(21) NOT NULL, -- PRIMARY KEY -- 17 ISBN underscore <999 copies
	ISBN VARCHAR2(17) NOT NULL
);


CREATE TABLE STUDENT (
	ID NUMBER(6) NOT NULL, -- PRIMARY KEY,
  COURSE_ID NUMBER(10) NOT NULL, -- FOREIGN KEY
	TITLE VARCHAR2(10), -- CHECK IN
	FIRST_NAME VARCHAR2(30) NOT NULL,
	LAST_NAME VARCHAR2(30) NOT NULL,
	ADDRESS VARCHAR2(100) NOT NULL,
	CITY VARCHAR2(50) DEFAULT 'Thessaloniki' NOT NULL,
	POSTCODE CHAR(5) NOT NULL,
	COUNTRY VARCHAR2(30) DEFAULT 'Greece' NOT NULL,
	CONTACT_NUMBER VARCHAR2(30),
	EMAIL VARCHAR2(100) NOT NULL, -- UNIQUE
	BIRTHDAY DATE NOT NULL
);

CREATE TABLE COURSE_MODULE (
	ID NUMBER(5) NOT NULL, -- PRIMARY KEY
	COURSE_ID NUMBER(10),
	MODULE_ID NUMBER(5)
);

CREATE TABLE ASSESSMENT (
	ID NUMBER(10) NOT NULL,
	COURSE_MODULE_ID NUMBER(5)
);

CREATE TABLE STUDENT_ASSESSMENT (
	ASSESSMENT_ID NUMBER(5) NOT NULL,
	STUDENT_ID NUMBER(10) NOT NULL,
	GRADE NUMBER(3) NOT NULL,
  EXAM NUMBER(3)
);

CREATE TABLE LOAN (
	ID NUMBER(10) NOT NULL, -- PRIMARY KEY, -- student can take the same book many times
	STUDENT_ID NUMBER(10), -- Null if not a student who borrowed it
	TUTOR_ID NUMBER(10), -- similarly
	COPY_ID VARCHAR2(21) NOT NULL,
	LOAN_DATE DATE NOT NULL,
	RETURN_DATE DATE -- NULL so we can query for non-returned
);


CREATE TABLE TUTOR_C_MODULE (
	TUTOR_ID NUMBER(10) NOT NULL,
	COURSE_MODULE_ID NUMBER(5) NOT NULL
);
